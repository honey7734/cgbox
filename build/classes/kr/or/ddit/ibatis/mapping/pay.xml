<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

  <sqlMap namespace = "pay">
  
  <!-- 회원이 보유한 상품을 리스트로 내보내주는 쿼리  -->
  <select id = "selectmcon" parameterClass = "int" resultClass = "selectmconVO">
  select a.myprod_no as myprod_no , a.prod_no as prod_no,
   a.myprod_count as myprod_count ,b.prod_name as prod_name
  from product  a , prod  b
  where a.prod_no = b.prod_no
      and  a.customer_no = #customer_no#
      and  b.prod_category = '영화관람권'
  
  </select>
  
  
  <!-- product에 해당 상품이 있는지 확인한다 -->
  
  <select id = "checkproduct" resultClass = "string" parameterClass = "map">
   select myprod_count     
     from product a, prod b
     where a.prod_no = b.prod_no
          and a.prod_no = #prod_no#
          and a.customer_no =#customer_no#
  </select>
  
  <!-- 원래 있는 상품이면 그냥 수량 +1한다! -->
<update id = "updateproductcount" parameterClass = "map">
  update product  set myprod_count = myprod_count +1  where customer_no =#customer_no# and prod_no =#prod_no#  
</update>

   
   <!-- 가지고 있지 않은 상품이라 insert를 해준다  -->
   <insert id = "insertmcon" parameterClass = "map">
   
   insert into product (myprod_no,prod_no,customer_no,myprod_count) 
    values(
    (select nvl(max(myprod_no),1) from product) ,#prod_no#,#customer_no#,1
    )
   
   </insert>
  
  <!--사용자가 입력한 prodno가 진짜 있는 상품인지 확인하기 -->
  
  <select id = "checkno" resultClass = "int"> <!-- '영화관람권 카테고리를 가진애들 리스트 ' -->
    select prod_no
    from prod 
    where prod_category ='영화관람권'
  </select>
  
  
  <!-- 상품의 금액 구하기  -->
  
 <select id = "discountprice" resultClass = "int" parameterClass = "int">
 select prod_price
 from prod
 where prod_no = #prod_no#
 
 </select>
  
  <!-- 2d 4d imax 로 하기로 했습니다/ -->
  <!-- 영화예약  정보 불러오기 <== 현의가 티켓제공해줌 -->
  
  
  
    <!-- 티켓정보 얻기   회원이 예약한 ticket no들이 나온다 List에 담아서...--> 
 <select id = "ticketNos" parameterClass ="int">
 select ticket_no
 from ticket
 where customer_no = #customer_no# and ticket_status = 'N'
 </select>
  
  <!-- 예약 테이블의 정보를 불러들인다! -->
  <select id = "selectreserve" resultClass = "reserveVO" parameterClass ="int">
 select seat_no ,screen_no  ,ticket_no 
 from reserve 
 where ticket_no = #ticket_no#
  </select>

  
  <!-- 영화제목 얻기  -->

  
  <select id= "selectMname" resultClass ="string" parameterClass = "int" >
  
  select movie_name
  from movie
  where movie_no = (
    select movie_no from screen where screen_no = #screen_no#
  )
  
  </select>
  
  <!-- 상영관 정보 얻기  결과는 한 줄  -->
  <select id= "selectTinfo" resultClass = "theaterVO" parameterClass = "int">
  
  select mtheater_no , theater_kind,theater_price,theater_name
  from theater
  where theater_no =(
    select theater_no from screen where screen_no = #screen_no#
  )
  </select>
  
  <!-- 영화관 이름 얻기  -->
  <select id = "getTname" resultClass = "string" parameterClass = "int" >
  select mtheater_name
  from mtheater
  where mtheater_no =#mtheater_no#
  
  </select>
  
  <!--좌석의 행열 얻기 -->
  
  <select id = "rowcol" resultClass = "seatVO" parameterClass = "int">
  select seat_row,seat_col
  from seat
  where seat_no = #seat_no#
  </select>
  
  <!-- 시작시간 끝시간 쿼리  -->
  
  
 <select id = "startend" resultClass = "screenVO"  parameterClass ="int">
 
 select screen_start ,screen_end
 from screen
 where screen_no = #screen_no#
 
 </select>
  
  <!-- 한꺼번에 영화 정보불러오는 쿼리
티켓번호, 영화이름,시작시간, 끝시간 ,좌석행, 좌석열, 상영관이름(몇관),상영관 종류,상영관 가격 
   -->
 <select id = "minfo" parameterClass = "int" resultClass = "minfoVO">
select l.movie_name , k.mtheater_name,k.screen_start,k.ticket_no ,k.screen_end,  k.seat_row, k.seat_col, k.theater_name, k.theater_kind, k.theater_price from movie l, 
(select i.mtheater_name, j.movie_no, j.screen_start,j.screen_end ,i.ticket_no ,i.seat_row, i.seat_col, i.theater_name, i.theater_kind, i.theater_price
from screen j,
(select h.mtheater_name, g.theater_no,g.seat_row,g.ticket_no,g.seat_col,g.screen_no,g.theater_kind,g.theater_price,g.theater_name  from mtheater h,
(select e.theater_no,e.seat_row,e.seat_col,e.seat_no,e.screen_no,e.ticket_no , f.mtheater_no,f.theater_kind,f.theater_price,f.theater_name
from theater f ,
(select d.theater_no,d.seat_row, d.seat_col, c.seat_no,c.screen_no,c.ticket_no from seat d,
(select b.seat_no, b.screen_no ,b.ticket_no
from reserve b,
(select ticket_no from ticket where customer_no =#customer_no# and ticket_status = 'N') a
where a.ticket_no = b.ticket_no) c
where d.seat_no = c.seat_no) e
where e.seat_no = f.theater_no) g 
where g.mtheater_no = h.mtheater_no) i
where i.theater_no = j.theater_no) k
where k.movie_no = l.movie_no

 
 </select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- 아직 등록안했어 !
   -->
  <!-- 티켓상태 결제 완료로 바꿔주기  -->
  
  <update id = "updateTStatus" parameterClass = "int">
  update ticket set ticket_status = "Y" where customer_no  = #customer_no#
  </update>
  
  
  
  
  
  
  
  </sqlMap>